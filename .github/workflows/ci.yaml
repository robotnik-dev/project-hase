
name: CI Pipeline

on:
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    name: ${{ matrix.platform.os-name }} - ${{ matrix.environment }}
    strategy:
      matrix:
        environment: [debug, release]
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            output: librust.so
            command: both
            toolchain: stable

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            output: rust.dll
            command: both
            toolchain: stable

          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
            output: librust.dylib
            command: both
            toolchain: stable

          - os-name: Android
            runs-on: ubuntu-latest
            target: aarch64-linux-android
            output: librust.so
            command: both
            toolchain: stable

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build ${{ matrix.environment }} binary
        uses: houseabsolute/actions-rust-cross@v1.0.3
        with:
          working-directory: rust
          # FIXME: https://github.com/cross-rs/cross/issues/1222
          cross-version: c7dee4d008475ce1c140773cbcd6078f4b86c2aa
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: ${{ matrix.environment == 'release' && '--locked --release' || '--locked' }}
          toolchain: ${{ matrix.platform.toolchain }}
          strip: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-${{ matrix.environment }}-${{ matrix.platform.os-name }}-${{ github.sha }}
          path: rust/target/${{ matrix.platform.target }}/${{ matrix.environment }}/${{ matrix.platform.output }}
          retention-days: 1


  export:
    name: Export Game Builds
    needs: test-and-build
    permissions: write-all
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            export-name: linux
            output-file: linux.x86_64
            channel: release

          - os-name: Windows-x86_64
            export-name: windows
            output-file: windows.exe
            channel: release

          - os-name: macOS-x86_64
            export-name: mac
            output-file: mac.zip
            channel: release

          - os-name: Android
            export-name: android-debug
            output-file: android-debug.apk
            channel: debug

    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:${{ vars.GODOT_VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Download Release Artifact
        uses: actions/download-artifact@v4
        with:
          path: rust/target/release
          pattern: rust-release-${{ matrix.platform.os-name }}-*

      - name: Download Debug Artifact
        uses: actions/download-artifact@v4
        with:
          path: rust/target/debug
          pattern: rust-debug-${{ matrix.platform.os-name }}-*

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${{ vars.GODOT_VERSION }}.stable ~/.local/share/godot/export_templates/${{ vars.GODOT_VERSION }}.stable

      - name: Export
        working-directory: godot
        run: |
          mkdir -v -p export/${{ matrix.platform.export-name }}
          godot --headless --verbose -e --quit
          godot --headless --verbose --export-${{ matrix.platform.channel }} "${{ matrix.platform.export-name }}" "export/${{ matrix.platform.export-name }}/${{ matrix.platform.output-file }}"

      - name: Upload Development Build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.export-name }}
          path: export/${{ matrix.platform.export-name }}
          retention-days: 1
