name: "Build and Export"

on: push

jobs:
  build:
    name: Build - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            output: librust.so
            command: both
            toolchain: stable

          # - os-name: Android
          #   runs-on: ubuntu-24.04
          #   target: aarch64-linux-android
          #   output: librust.so
          #   command: both
          #   toolchain: stable

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            output: rust.dll
            command: both
            toolchain: stable

          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
            output: librust.dylib
            command: both
            toolchain: stable

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1.0.3
        with:
          working-directory: rust
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          toolchain: ${{ matrix.platform.toolchain }}
          strip: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-${{ matrix.platform.os-name }}
          path: rust/target/${{ matrix.platform.target }}/release/${{ matrix.platform.output }}

  export:
    name: Export
    needs: build
    permissions: write-all
    # strategy:
    #   matrix:
    #     platform:
    #       - os-name: Linux-x86_64
    #         runs-on: ubuntu-24.04
    #         library-name: librust.so
    #         export-name: Linux
    #         godot-platform: linux.x86_64

    #       # - os-name: Android
    #       #   runs-on: ubuntu-24.04
    #       #   library-name: librust.so
    #       #   export-name: Android Debug
    #       #   godot-platform: linux.x86_64

    #       - os-name: Windows-x86_64
    #         runs-on: windows-latest
    #         library-name: rust.dll
    #         export-name: Windows Desktop
    #         godot-platform: win64.exe

    #       - os-name: macOS-x86_64
    #         runs-on: macOS-latest
    #         library-name: librust.dylib
    #         export-name: macOS
    #         godot-platform: macos.universal

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: install wine
        id: wine_install
        run: |
          sudo apt install wine64
          echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: rust/target/debug
          pattern: rust-*
          merge-multiple: true

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: export game
        id: export
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/${{ vars.GODOT_VERSION }}-stable/Godot_v${{ vars.GODOT_VERSION }}-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/${{ vars.GODOT_VERSION }}-stable/Godot_v${{ vars.GODOT_VERSION }}-stable_export_templates.tpz
          relative_project_path: godot
          archive_output: true
          verbose: true
          wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: export
          path: ${{ steps.export.outputs.archive_directory }}
