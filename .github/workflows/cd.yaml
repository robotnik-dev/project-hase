name: CD Pipeline

on:
  push:
    tags:
      - "v*"

jobs:
  test-and-build:
    name: ${{ matrix.platform.os-name }} - ${{ matrix.environment }}
    strategy:
      matrix:
        environment: [debug, release]
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            output: librust.so
            command: both
            toolchain: stable

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
            output: rust.dll
            command: both
            toolchain: stable

          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
            output: librust.dylib
            command: both
            toolchain: stable

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build ${{ matrix.environment }} binary
        uses: houseabsolute/actions-rust-cross@v1.0.3
        with:
          working-directory: rust
          # FIXME: https://github.com/cross-rs/cross/issues/1222
          # cross-version: c7dee4d008475ce1c140773cbcd6078f4b86c2aa
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: ${{ matrix.environment == 'release' && '--locked --release' || '--locked' }}
          toolchain: ${{ matrix.platform.toolchain }}
          strip: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-${{ matrix.environment }}-${{ matrix.platform.os-name }}-${{ github.sha }}
          path: rust/target/${{ matrix.platform.target }}/${{ matrix.environment }}/${{ matrix.platform.output }}
          retention-days: 1

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-${{ matrix.environment }}-${{ matrix.platform.os-name }}-${{ github.sha }}
          path: rust/target/${{ matrix.platform.target }}/${{ matrix.environment }}/${{ matrix.platform.output }}
          retention-days: 1


  export:
    name: Export Game Builds
    needs: test-and-build
    permissions: write-all
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Release Artifacts
        uses: actions/download-artifact@v4
        with:
          path: rust/target/release
          pattern: rust-release-*
          merge-multiple: true

      - name: Download Debug Artifacts
        uses: actions/download-artifact@v4
        with:
          path: rust/target/debug
          pattern: rust-debug-*
          merge-multiple: true

      - name: Export Games
        run: 

      - name: Upload Development Build
        uses: actions/upload-artifact@v4
        with:
          name: games
          path: build/
          retention-days: 1


  create-release:
    name: Create Github Realease
    needs: export
    permissions:
      contents: write
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download Builds
        uses: actions/download-artifact@v4
        with:
          name: games
          path: build/

      - name: Create Release Directory
        run: mkdir -v -p release

      - name: Zip Linux Artifacts
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r release/linux.zip build/linux

      - name: Zip Windows Artifacts
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r release/windows.zip build/windows

      - name: Zip Mac Artifacts
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r release/mac.zip build/mac

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          make_latest: true
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            release/*


  deploy:
    name: Deploy Games
    needs: export
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - name: Windows
            channel: windows

          - name: MacOs
            channel: mac

          - name: Linux
            channel: linux

    steps:
      - name: Download Builds
        uses: actions/download-artifact@v4
        with:
          name: games
          path: build/

      - name: Deploy ${{ matrix.platform.name }}
        uses: manleydev/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: ${{ matrix.platform.channel }}
          ITCH_GAME: ${{ vars.ITCHIO_GAMENAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: build/${{ matrix.platform.channel }}
          VERSION: ${{ github.ref_name }}
